{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/w/Development/projects/chefnotes/chefnotes-app/src/components/NavBar.tsx\";\nimport React, { useEffect } from \"react\";\nimport { Button, Flex, Center, Text } from \"@chakra-ui/react\";\nimport { useRouter } from \"next/router\";\nimport { useLogoutMutation, useMeQuery } from \"../generated/graphql\";\nimport { useApolloClient } from \"@apollo/client\";\nexport const NavBar = ({}) => {\n  const [logout, {\n    loading: logoutFetching\n  }] = useLogoutMutation();\n  const {\n    data,\n    loading\n  } = useMeQuery();\n  const router = useRouter();\n  const apolloClient = useApolloClient();\n  useEffect(() => {\n    if (!(data !== null && data !== void 0 && data.me)) {\n      router.push(\"/login\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: [/*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Chefnotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: async () => {\n        await logout;\n        await apolloClient.resetStore();\n        router.push(\"/login\");\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/w/Development/projects/chefnotes/chefnotes-app/src/components/NavBar.tsx"],"names":["React","useEffect","Button","Flex","Center","Text","useRouter","useLogoutMutation","useMeQuery","useApolloClient","NavBar","logout","loading","logoutFetching","data","router","apolloClient","me","push","resetStore"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,kBAAhD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAkBC,iBAAlB,EAAqCC,UAArC,QAAuD,sBAAvD;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAIA,OAAO,MAAMC,MAA6B,GAAG,CAAC,EAAD,KAAQ;AACnD,QAAM,CAACC,MAAD,EAAS;AAAEC,IAAAA,OAAO,EAAEC;AAAX,GAAT,IAAwCN,iBAAiB,EAA/D;AACA,QAAM;AAAEO,IAAAA,IAAF;AAAQF,IAAAA;AAAR,MAAoBJ,UAAU,EAApC;AACA,QAAMO,MAAM,GAAGT,SAAS,EAAxB;AAEA,QAAMU,YAAY,GAAGP,eAAe,EAApC;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAACa,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEG,EAAP,CAAJ,EAAe;AACbF,MAAAA,MAAM,CAACG,IAAP,CAAY,QAAZ;AACD;AACF,GAJQ,CAAT;AAMA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,MAAD;AACE,MAAA,OAAO,EAAE,YAAY;AACnB,cAAMP,MAAN;AACA,cAAMK,YAAY,CAACG,UAAb,EAAN;AACAJ,QAAAA,MAAM,CAACG,IAAP,CAAY,QAAZ;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA9BM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Box, Button, Flex, Center, Text } from \"@chakra-ui/react\";\nimport { useRouter } from \"next/router\";\nimport { MeQuery, useLogoutMutation, useMeQuery } from \"../generated/graphql\";\nimport { useApolloClient } from \"@apollo/client\";\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const [logout, { loading: logoutFetching }] = useLogoutMutation();\n  const { data, loading } = useMeQuery();\n  const router = useRouter();\n\n  const apolloClient = useApolloClient();\n  useEffect(() => {\n    if (!data?.me) {\n      router.push(\"/login\");\n    }\n  });\n\n  return (\n    <Flex>\n      <Center>\n        <Text>\n          <a href=\"/\">Chefnotes</a>\n        </Text>\n      </Center>\n      <Button\n        onClick={async () => {\n          await logout;\n          await apolloClient.resetStore();\n          router.push(\"/login\");\n        }}\n      >\n        Logout\n      </Button>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}