{"ast":null,"code":"import _defineProperty from \"/Users/w/Development/projects/chefnotes/chefnotes-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/w/Development/projects/chefnotes/chefnotes-app/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/w/Development/projects/chefnotes/chefnotes-app/src/components/InputField.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { Box, FormControl, InputLabel, TextField } from \"@material-ui/core\";\nexport const InputField = (_ref) => {\n  _s();\n\n  let {\n    lable,\n    textarea,\n    size: _\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"lable\", \"textarea\", \"size\"]);\n\n  const [field, {\n    error\n  }] = useField(props);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: \"200px\",\n    margin: \"10px\",\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: field.name,\n        children: lable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n        error: true,\n        multiline: textarea\n      }, field), {}, {\n        id: field.name\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/w/Development/projects/chefnotes/chefnotes-app/src/components/InputField.tsx"],"names":["React","useField","Box","FormControl","InputLabel","TextField","InputField","lable","textarea","size","_","props","field","error","name"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SACEC,GADF,EAEEC,WAFF,EAIEC,UAJF,EAKEC,SALF,QAMO,mBANP;AAcA,OAAO,MAAMC,UAAqC,GAAG,UAK/C;AAAA;;AAAA,MALgD;AACpDC,IAAAA,KADoD;AAEpDC,IAAAA,QAFoD;AAGpDC,IAAAA,IAAI,EAAEC;AAH8C,GAKhD;AAAA,MADDC,KACC;;AACJ,QAAM,CAACC,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqBZ,QAAQ,CAACU,KAAD,CAAnC;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAC,OAAX;AAAoB,IAAA,MAAM,EAAC,MAA3B;AAAA,2BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEC,KAAK,CAACE,IAA3B;AAAA,kBAAkCP;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,SAAS,EAAEC;AAA5B,SAA0CI,KAA1C;AAAiD,QAAA,EAAE,EAAEA,KAAK,CAACE;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfM;;GAAMR,U;UAMgBL,Q;;;KANhBK,U","sourcesContent":["import React, { InputHTMLAttributes } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  Box,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  TextField,\n} from \"@material-ui/core\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  lable: string;\n  name: string;\n  textarea?: boolean;\n};\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  lable,\n  textarea,\n  size: _,\n  ...props\n}) => {\n  const [field, { error }] = useField(props);\n  return (\n    <Box width='200px'  margin='10px'>\n      <FormControl>\n        <InputLabel htmlFor={field.name}>{lable}</InputLabel>\n        <TextField error multiline={textarea} {...field} id={field.name} />\n      </FormControl>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}