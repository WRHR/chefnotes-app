{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/w/Development/projects/chefnotes/chefnotes-app/src/pages/register.tsx\";\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { MeDocument, useRegisterMutation } from \"../generated/graphql\";\nimport { Box, Flex, Button, Text } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/InputField\";\nimport { Heading } from \"../components/Heading\";\n\nconst register = ({}) => {\n  const router = useRouter();\n  const [register] = useRegisterMutation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await register({\n          variables: {\n            options: values\n          },\n          update: (cache, {\n            data\n          }) => {\n            cache.writeQuery({\n              query: MeDocument,\n              data: {\n                __typename: \"Query\",\n                me: data === null || data === void 0 ? void 0 : data.register.user\n              }\n            });\n          }\n        });\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n          setErrors(toErrorMap(response.data.register.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.register.user) {\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Flex, {\n        flexDir: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"username\",\n            placeholder: \"Username\",\n            label: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"email\",\n              placeholder: \"Email\",\n              label: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"password\",\n              placeholder: \"Password\",\n              label: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            isLoading: isSubmitting,\n            children: \"register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Click Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default register;","map":{"version":3,"sources":["/Users/w/Development/projects/chefnotes/chefnotes-app/src/pages/register.tsx"],"names":["React","useRouter","MeDocument","useRegisterMutation","Box","Flex","Button","Text","Form","Formik","toErrorMap","InputField","Heading","register","router","email","username","password","values","setErrors","response","variables","options","update","cache","data","writeQuery","query","__typename","me","user","errors","push","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { MeDocument, MeQuery, useRegisterMutation } from \"../generated/graphql\";\nimport { Box, Flex, Button, Text } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/InputField\";\nimport { Heading } from \"../components/Heading\";\n\nconst register: React.FC = ({}) => {\n  const router = useRouter();\n  const [register] = useRegisterMutation();\n\n  return (\n    <Box >\n      <Heading />\n      <Formik\n        initialValues={{ email: \"\", username: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await register({\n            variables: { options: values },\n            update: (cache, { data }) => {\n              cache.writeQuery<MeQuery>({\n                query: MeDocument,\n                data: {\n                  __typename: \"Query\",\n                  me: data?.register.user,\n                },\n              });\n            },\n          });\n          if (response.data?.register.errors) {\n            setErrors(toErrorMap(response.data.register.errors));\n          } else if (response.data?.register.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Flex flexDir='column'>\n            <Form>\n              <InputField\n                name=\"username\"\n                placeholder=\"Username\"\n                label=\"Username\"\n              />\n              <Box mt={4}>\n                <InputField name=\"email\" placeholder=\"Email\" label=\"Email\" />\n              </Box>\n              <Box mt={4}>\n                <InputField\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  label=\"Password\"\n                  type=\"password\"\n                />\n              </Box>\n              <Button\n                type='submit'\n                isLoading={isSubmitting}\n              >\n                register\n              </Button>\n            </Form>\n            <Text>\n              Already have an account? <a href=\"/login\">Click Here</a>\n            </Text>\n          </Flex>\n        )}\n      </Formik>\n    </Box>\n  );\n};\nexport default register;\n"]},"metadata":{},"sourceType":"module"}