{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/w/Development/projects/chefnotes/chefnotes-app/src/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { MeDocument, useRegisterMutation } from \"../generated/graphql\";\nimport { Box, Button, CircularProgress, createStyles, makeStyles, Typography } from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/InputField\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"20%\"\n  },\n  page: {\n    height: \"100%\",\n    width: \"100%\"\n  }\n}));\n\nconst register = ({}) => {\n  _s();\n\n  const router = useRouter();\n  const [register] = useRegisterMutation();\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.page,\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: \"\",\n        username: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await register({\n          variables: {\n            options: values\n          },\n          update: (cache, {\n            data\n          }) => {\n            cache.writeQuery({\n              query: MeDocument,\n              data: {\n                __typename: \"Query\",\n                me: data === null || data === void 0 ? void 0 : data.register.user\n              }\n            });\n          }\n        });\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.register.errors) {\n          setErrors(toErrorMap(response.data.register.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.register.user) {\n          router.push(\"/\");\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            name: \"username\",\n            placeholder: \"Username\",\n            lable: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"email\",\n              placeholder: \"Email\",\n              lable: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"password\",\n              placeholder: \"Password\",\n              lable: \"Password\",\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Click Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(register, \"z0y+n1na/zBifjEsC+3Z+xRgbNo=\", false, function () {\n  return [useRouter, useRegisterMutation, useStyles];\n});\n\nexport default register;","map":{"version":3,"sources":["/Users/w/Development/projects/chefnotes/chefnotes-app/src/pages/register.tsx"],"names":["React","useRouter","MeDocument","useRegisterMutation","Box","Button","CircularProgress","createStyles","makeStyles","Typography","Form","Formik","toErrorMap","InputField","useStyles","theme","container","display","flexDirection","alignItems","marginTop","page","height","width","register","router","classes","email","username","password","values","setErrors","response","variables","options","update","cache","data","writeQuery","query","__typename","me","user","errors","push","isSubmitting"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,EAA8BC,mBAA9B,QAAyD,sBAAzD;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,gBAHF,EAIEC,YAJF,EAKEC,UALF,EAOEC,UAPF,QAQO,mBARP;AASA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,IAC3BR,YAAY,CAAC;AACXS,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,SAAS,EAAE;AAJF,GADA;AAOXC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,KAAK,EAAE;AAFH;AAPK,CAAD,CADc,CAA5B;;AAeA,MAAMC,QAAkB,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACjC,QAAMC,MAAM,GAAGxB,SAAS,EAAxB;AACA,QAAM,CAACuB,QAAD,IAAarB,mBAAmB,EAAtC;AACA,QAAMuB,OAAO,GAAGZ,SAAS,EAAzB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACL,IAAxB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEM,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE,EAAvB;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AAAA;;AACzC,cAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAAC;AAC9BS,UAAAA,SAAS,EAAE;AAAEC,YAAAA,OAAO,EAAEJ;AAAX,WADmB;AAE9BK,UAAAA,MAAM,EAAE,CAACC,KAAD,EAAQ;AAAEC,YAAAA;AAAF,WAAR,KAAqB;AAC3BD,YAAAA,KAAK,CAACE,UAAN,CAA0B;AACxBC,cAAAA,KAAK,EAAErC,UADiB;AAExBmC,cAAAA,IAAI,EAAE;AACJG,gBAAAA,UAAU,EAAE,OADR;AAEJC,gBAAAA,EAAE,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEb,QAAN,CAAekB;AAFf;AAFkB,aAA1B;AAOD;AAV6B,SAAD,CAA/B;;AAYA,8BAAIV,QAAQ,CAACK,IAAb,2CAAI,eAAeb,QAAf,CAAwBmB,MAA5B,EAAoC;AAClCZ,UAAAA,SAAS,CAACnB,UAAU,CAACoB,QAAQ,CAACK,IAAT,CAAcb,QAAd,CAAuBmB,MAAxB,CAAX,CAAT;AACD,SAFD,MAEO,uBAAIX,QAAQ,CAACK,IAAb,4CAAI,gBAAeb,QAAf,CAAwBkB,IAA5B,EAAkC;AACvCjB,UAAAA,MAAM,CAACmB,IAAP,CAAY,GAAZ;AACD;AACF,OApBH;AAAA,gBAsBG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEnB,OAAO,CAACV,SAAxB;AAAA,gCACE,QAAC,IAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,WAAW,EAAC,UAFd;AAGE,YAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,OAAjB;AAAyB,cAAA,WAAW,EAAC,OAArC;AAA6C,cAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,UAFd;AAGE,cAAA,KAAK,EAAC,UAHR;AAIE,cAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,EAiBG6B,YAAY,gBACX,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBADW,gBAGX,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAwBE,QAAC,UAAD;AAAA,+DAC2B;AAAG,YAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAvBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD,CA9DD;;GAAMrB,Q;UACWvB,S,EACIE,mB,EACHW,S;;;AA4DlB,eAAeU,QAAf","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { MeDocument, MeQuery, useRegisterMutation } from \"../generated/graphql\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { InputField } from \"../components/InputField\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      marginTop: \"20%\",\n    },\n    page: {\n      height: \"100%\",\n      width: \"100%\",\n    },\n  })\n);\n\nconst register: React.FC = ({}) => {\n  const router = useRouter();\n  const [register] = useRegisterMutation();\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.page}>\n      <Formik\n        initialValues={{ email: \"\", username: \"\", password: \"\" }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await register({\n            variables: { options: values },\n            update: (cache, { data }) => {\n              cache.writeQuery<MeQuery>({\n                query: MeDocument,\n                data: {\n                  __typename: \"Query\",\n                  me: data?.register.user,\n                },\n              });\n            },\n          });\n          if (response.data?.register.errors) {\n            setErrors(toErrorMap(response.data.register.errors));\n          } else if (response.data?.register.user) {\n            router.push(\"/\");\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Box className={classes.container}>\n            <Form>\n              <InputField\n                name=\"username\"\n                placeholder=\"Username\"\n                lable=\"Username\"\n              />\n              <Box mt={4}>\n                <InputField name=\"email\" placeholder=\"Email\" lable=\"Email\" />\n              </Box>\n              <Box mt={4}>\n                <InputField\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  lable=\"Password\"\n                  type=\"password\"\n                />\n              </Box>\n              {isSubmitting ? (\n                <CircularProgress />\n              ) : (\n                <Button type=\"submit\">register</Button>\n              )}\n            </Form>\n            <Typography>\n              Already have an account? <a href=\"/login\">Click Here</a>\n            </Typography>\n          </Box>\n        )}\n      </Formik>\n    </Box>\n  );\n};\nexport default register;\n"]},"metadata":{},"sourceType":"module"}