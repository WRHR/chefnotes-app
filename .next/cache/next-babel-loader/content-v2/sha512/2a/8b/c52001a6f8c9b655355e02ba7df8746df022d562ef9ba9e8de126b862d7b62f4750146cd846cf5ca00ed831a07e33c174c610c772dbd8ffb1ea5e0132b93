{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/w/Development/projects/chefnotes/chefnotes-app/src/pages/login.tsx\";\nimport React from \"react\";\nimport { Box, Button, CircularProgress, createStyles, makeStyles } from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { MeDocument, useLoginMutation } from \"../generated/graphql\";\nimport { InputField } from \"../components/InputField\";\nimport { useRouter } from \"next/router\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin\n  }\n}));\n\nconst login = ({}) => {\n  const classes = useStyles();\n  const router = useRouter();\n  const [login] = useLoginMutation();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        usernameOrEmail: \"\",\n        password: \"\"\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        var _response$data, _response$data2;\n\n        const response = await login({\n          variables: values,\n          update: (cache, {\n            data\n          }) => {\n            cache.writeQuery({\n              query: MeDocument,\n              data: {\n                __typename: \"Query\",\n                me: data === null || data === void 0 ? void 0 : data.login.user\n              }\n            });\n          }\n        });\n\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.login.errors) {\n          setErrors(toErrorMap(response.data.login.errors));\n        } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.login.user) {\n          if (typeof router.query.next === \"string\") {\n            router.push(router.query.next);\n          } else {\n            router.push(\"/\");\n          }\n        }\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            lable: \"Username or Email\",\n            name: \"usernameOrEmail\",\n            placeholder: \"Username or Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            name: \"password\",\n            lable: \"Password\",\n            type: \"password\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default login;","map":{"version":3,"sources":["/Users/w/Development/projects/chefnotes/chefnotes-app/src/pages/login.tsx"],"names":["React","Box","Button","CircularProgress","createStyles","makeStyles","Form","Formik","MeDocument","useLoginMutation","InputField","useRouter","toErrorMap","useStyles","theme","container","display","flexDirection","margin","login","classes","router","usernameOrEmail","password","values","setErrors","response","variables","update","cache","data","writeQuery","query","__typename","me","user","errors","next","push","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  createStyles,\n  makeStyles,\n  Paper,\n  Theme,\n} from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport { MeDocument, MeQuery, useLoginMutation } from \"../generated/graphql\";\nimport { InputField } from \"../components/InputField\";\nimport { useRouter } from \"next/router\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\n\ninterface Values {\n  usernameOrEmail: string;\n  password: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin\n    },\n  })\n);\n\nconst login: React.FC = ({}) => {\n  const classes = useStyles();\n  const router = useRouter();\n  const [login] = useLoginMutation();\n  return (\n    <Box>\n      <Formik\n        initialValues={{\n          usernameOrEmail: \"\",\n          password: \"\",\n        }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login({\n            variables: values,\n            update: (cache, { data }) => {\n              cache.writeQuery<MeQuery>({\n                query: MeDocument,\n                data: {\n                  __typename: \"Query\",\n                  me: data?.login.user,\n                },\n              });\n            },\n          });\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            if (typeof router.query.next === \"string\") {\n              router.push(router.query.next);\n            } else {\n              router.push(\"/\");\n            }\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Box className={classes.container}>\n              <InputField\n                lable=\"Username or Email\"\n                name=\"usernameOrEmail\"\n                placeholder=\"Username or Email\"\n              />\n              <InputField\n                name=\"password\"\n                lable=\"Password\"\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n              {isSubmitting ? <CircularProgress /> : <Button type='submit'>login</Button>}\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}